[{"title":"aws-business-professional","url":"/2019/02/15/aws-business-professional/","content":"\nAWS云计算的敏捷性\n---\n1. 可以在数分钟部署至全球\n2. 减少获取资源时间，降低试验和开发的成本时间，提高组织的敏捷性\n3. 由于这种敏捷性，可以为组织提供更多创新的空间，本地部署：试验少，失败代价昂贵，创新少；云计算：经常试验，快速测试失败代价低，创新多。\n\n全球基础设施\n---\n地区，是几个可用区的集合，地区之间是完全相互独立的、\n可用区（AZ），一个地区内的不同几个数据中心，互相关联，优化延迟，最大程度降低成本，防止应用程序出现单点故障。\n边缘站点，网站、动态、静态和流内容的分发，所有请求将会路由到最近的边缘站点，提供更快的内容分发。\n\nAWS TCO分析\n---\nTCO = 采购成本 + 运营成本\n1. 软件成本：操作系统、虚拟机管理程序、数据中心管理、软件维护；硬件成本：设备成本（服务器、存储、网络）硬件维护。IT管理成本：虚拟化管理、系统管理、存储管理、网络管理、安全管理、数据中心管理。设施成本：构建成本、维护、税费、安全人员、设施人员、电力成本、散热成本。\n2. 服务器成本，存储成本，网络成本。IT管理成本，设施成本。\n\nAWS TCO Calculator 使用方法\n1. 输入已有本地环境\n2. 分析报告，对比3年TCO对比\n3. 下载报告\n\n定价原则\n1. 无需前期投资\n2. 按使用量付费\n3. 按实际使用量付费\n4. 各项服务独立定价\n5. 批量折扣\n6. 预留实例折扣\n\n规模经济循环\n降价——更多客户——AWS 使用率更高——更多基础设施——规模经济——基础设施成本更低\n\nEC2定价由内存、cpu、类型、时间、网络、os、区域"},{"title":"Hello World","url":"/2019/02/14/hello-world/","content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n"},{"title":"markdown","url":"/2019/02/13/markdown/","content":"\ntitle\n---\n\nnatt\n===\nnatt\n---\n###natt\n\nbolder italic\n---\n**bolder**\n_italic_\n\nquote\n---\n>quote\n>>quote \n\nlist\n---\n- list\n- list\n\n1. list\n2. list\n\nline\n---\n***\n___\n\nlink\n---\n[google](google.com)\n\npic\n---\n![md](https://github.com/younghz/Markdown/raw/master/resource/Aaron_Swartz.jpg)\n\nmark\n---\n`ctrl + a`\n\ncode\n---\n```\nvoid main()\n{\nprintf(\"Hello, Markdown.\");\n}\n```"},{"title":"大数据思维：数据驱动和业务场景化","url":"/2019/02/13/big-data-thought-data-drive-business-sence/","content":"\n大数据的特征\n----\n**Volume 数据容量大：** 数据量从 GB 到 TB 到 PB 或以上的级别。\n\n**Variety 数据类型多：** 企业在解决好内部数据之后，开始向外部数据扩充。同时，从以往处理结构化的数据到现在需要处理大量非结构化的数据。社交网络数据采集分析、各种日志文本、视频图片等等。\n\n**Value 价值高，密度低：** 数据总量很大，但真正有价值的数据可能只有那么一部分，有价值的数据所占比例很小。就需要通过从大量不相关的、各种类型的数据中去挖掘对未来趋势和模型预测分析有价值的数据，发现新的规律和新的价值。\n\n**Velocity 快速化：** 数据需要快速处理和分析。2010年前后做过一个美国医疗保险的数据迁移项目，有一个 ETL 需要处理该公司几十年的历史文件和历史数据，文件数据量很大，并且逻辑非常复杂，一个流程几十个包，一趟下来 35 个小时执行完毕。这种情形如果放在现在的互联网比如电商平台很显然是不允许的。比如像电商促销、或者要打促销价格战，实时处理传统的 BI 是无法完成的。对有这种实时处理实时分析要求的企业来说，数据就是金钱，时间就是生命。\n\n企业在建设大数据时面临的问题\n----\n但是当我们谈到大数据，大家真正关心的问题在哪里呢？从技术角度大家可能关心的是大数据的架构、大数据处理用到了什么样的技术。**但是站在一个企业层面，特别是在着手考察或者规划大数据项目建设的负责人、企业高层来说，更多关心的应该是下面这几个问题：**\n\n1. 大数据到底能帮我们企业做什么，或者说能够带给我们企业什么变化。上了大数据对我们有什么用，会有什么样的改变，是经营成本下降、还是帮我们把产品卖的更多？\n\n2. 我们的企业现在能不能上大数据？如果不能上大数据，为什么，那又需要怎么做？\n\n3. 我们企业也想跟随潮流上大数据，问题是要怎么做。需要准备什么，关于投入、人才、还缺什么、需要用到什么样的技术？\n\n4. 我们怎么验证这个大数据项目是成功还是失败，我们判断的标准是什么？\n\n大数据思维方式：数据驱动和业务场景化\n=====\n数据驱动，以数据为中心\n----\n![数据驱动](https://pic2.zhimg.com/80/v2-ada92b09f6d7b8378abc31de0e5e74c9_hd.jpg \"数据驱动\")\n1. 尽可能完善自己的数据资源。只有了解我们目前自身的数据资源，才能知道我们还缺少哪些数据资源。而这些缺少的数据资源从哪里来，如何获得，就是我们在规划大数据项目的时候是需要解决的。\n2. 增加数据触点、尽可能多的去收集数据，增加数据收集和采集渠道。数据越多，数据种类越丰富，我们观察数据的角度维度就越丰富，我们利用大数据从中就能够发掘出以前更多没有看到的东西。\n3. 数据开放和共享思维。1）非常清楚的知道自己拥有哪些数据资源。2）为了纳入更多的社会化数据资源、实现全行业的数据覆盖，他们准备接入交通、服务、科技信息化、教育、社保、民政等各个行业的数据。所以这个时候就需要考虑数据开放和共享的思维，在满足数据安全性的基础之上我们可以不可以考虑数据互换共享的可能。我们能不能考虑我们企业的上下游比如供应链、物流等合作伙伴我们之前的数据本着平等和互利的原则进行打通和共享，这里面一定会创造出很多有价值的场景。数据只有流动才会有变得有价值，大数据思维下，数据流通和共享这需要我们把思维放得更开放。\n4. 通过数据生成问题，发现问题，而不仅仅是回答问题。大数据不是用来回答问题的，也不是用来去下结论的，大数据是基于海量数据用来洞察、预测和发现问题的，发现问题之后是需要我们的分析人员去进行分析得出结论，之后再去优化我们的产品、流程，然后再分析再预测和再验证的一个过程。\n5. 由经验判断判断改为数据判断。\n所以总结起来，数据驱动的思维方式就是：了解和掌握我们已有的数据资源、寻找我们没有的新的数据资源、尽可能多的收集与我们行业、业务、上下游相关的数据资源、数据开放和数据流通、通过数据发现问题定位问题、由以往的经验判断过渡到数据驱动数据判断。\n\n业务场景化，以业务为核心\n----\n首先需要大家能够清晰认识到的是：大数据在不同的行业中不具备可复制性，大数据是一个高度个性化与行业深度结合的技术加业务的综合体。如果我们在外面碰到有大数据公司说我什么行业都能做，这基本上就是忽悠。目前大数据做的比较深的行业主要还是集中在互联网、电商、金融、银行这些领域。\n企业目前要的不是大数据技术选型，也不是大数据技术架构应该怎么去搭，它要的是大数据的一个顶层设计，需要的是一个个具体的业务场景，我们的大数据在这些业务场景里面能够解决哪些具体的问题。只有这些问题弄清楚了之后，再才是数据调研和技术架构选型到最终的实施。\n\n![业务场景化](https://pic2.zhimg.com/80/v2-553b14de1912fbe138333a754eccbd29_hd.jpg \"业务场景化\")\n\n1. 懂行业、深挖业务，业务边界要先聚焦再扩散。没有业务的指引，大数据的建设就失去了方向。另外，大数据的建设要阶段性的出成果，不是一上来所有的业务就需要全面打通。\n2. 通过业务找数据、通过问题找数据。这个时候就需要借助第三方的数据资源来完成这个业务场景，这就是通过业务找数据、通过问题找数据。所以业务场景化，需要具备通过业务发现缺失的数据资源，同时也需要掌握这种找数据的能力。\n3. 通过数据找问题、通过数据找业务。从数据中查找业务发现业务。\n4. 丰富和创造各种业务场景。业务场景的丰富程度决定大数据利用价值的深度和广度，但凡是成功的大数据项目它的业务场景都是非常丰富的。所以在大数据项目的规划和落地的过程中，我们首先要去想想我们的业务场景有哪些？有哪些业务场景可以被创造出来，有哪些业务场景是我们之前一直想做但由于条件限制没有办法做的。所以，业务场景的丰富程度取决于数据的积累程度，数据的积累程度不够，就需要首先解决数据的问题。\n5. 关注新技术、新资源、新渠道。新的技术和资源渠道会影响甚至变革我们自身的业务，也可能带来新的业务模式，我们需要不断的关注这些新的业务模式带来的新的业务场景。\n6. 专业的业务分析人员培养，专业咨询和规划人才可遇而不可求。如果我们在规划和建设大数据平台的时候，忽略了懂业务懂分析专业人才的培养，这样的大数据平台是不会创造持久的价值的。\n\n![业务场景化](https://pic4.zhimg.com/80/v2-167e4e3b820afb6e3abd24493315800f_hd.jpg \"业务场景化\")\n\n大数据的价值\n---\n![大数据价值](https://pic3.zhimg.com/80/v2-03d8aec08eabdbd231ae5fa5c210b586_hd.jpg \"大数据价值\")\n什么是业务价值？以业务驱动、数据驱动真正形成业务上的决策指导，让企业的业务决策、经营决策、生产决策、市场打法能够真正的落地，并产生实际看得见摸得着的实实在在的价值：比如利润的提升、市场产品的份额增长、经营成本的降低、发现新的商业模式等等。"},{"title":"Natt7博客建设","url":"/2018/12/12/build-blog/","content":"\n使用github page + hexo + aws S3 + aliyun域名和dns 搭建个人博客，github page是一个纯静态的网站页面，所以编写博客实际上是在本地写好markdown文件之后打包成html上传到github里。这里因为没有图床所以拿aws的S3做图床（aws只能免费用一年，到时候要考虑迁移的事情，但最近在学aws还是放在上面了）。然后在阿里云上面买了个域名，解析到natt7.github.io上面，做了个CNAME解析（本来想用aws的route53，但竟然host zone要收费啥都不干一个月0.9刀，配置费用加标准请求费用，还是共产主义好）\n\nGithub建一个以自己账号名称+github.io为名字的库，比如natt7.github.io\n然后在repo的setting里选择一个github pages的主题，当然这里我是随便选的，好像github官方是用Jekyll做主题的，我后来选择用hexo。\n\n本地先安装hexo\n\n``` bash\n$ npm install -g hexo-cli\n```\n\n新建一个hexo站点，其实就是在本地找个地方创建一个目录\n\n``` bash\n$ hexo init <folder>\n$ cd <folder>\n$ npm install\n```\n\n然后在hexo网站里找了一个theme，把下载的theme文件放在创建好的hexo站点的主题文件夹下面，运行一下看看。\n\n``` bash\n$ hexo s\n```\n没什么问题就可以开始一些配置，这些配置可以参考主题的github一般会有介绍，或者查看hexo文档也可以。\n\n可以创建文章了。\n``` bash\n$ hexo new <title>\n```\n\n编辑好文章和配置可以进行打包\n``` bash\n$ hexo g\n```\n部署之前需要安装一个hexo和git部署的插件，在配置中把库的名称上面打上去。\nnpm install hexo-deployer-git --save\n\n然后就可以把打包好的文件部署上去了\n``` bash\n$ hexo d\n```\n访问natt7.github.io就可以访问部署好的博客了。\n\nS3上创建一个桶，给了一些权限，但发现每次要进网页的console去传图片有点麻烦，所以折腾了一下aws的cli。\n先安装一个aws的cli\nhttps://docs.aws.amazon.com/zh_cn/cli/latest/userguide/cli-install-macos.html\n\n配置一个秘钥对\n``` bash\n$ aws configure\n```\n\nS3上传图片，传了一个文件到制定桶里，权限设置是让所有人可读，制定aws标准id用户有所有权限。\n```bash\n$ aws s3 cp <file> s3://yourbucket --grants read=uri=http://acs.amazonaws.com/groups/global/AllUsers full=id=<aws-standard-id>\n```\nS3 cli命令参考\nhttps://docs.aws.amazon.com/zh_cn/cli/latest/userguide/using-s3-commands.html\n\n删除S3文件\n```bash\naws s3 rm s3://yourbucket/<file>\n```\n\n域名的CNAME不演示了 很简单，去阿里云配置一下就好了。","tags":["aws","github","aliyun"]},{"title":"机器学习入门的一些碎片知识","url":"/2018/12/11/ml intro/","content":"\n通过数据找寻规律，不同的算法会形成不同的规律形式，最后以函数的形式落地规律，并且有机器学习系统自行生成函数，不需要编程\n\n机器学习的基石是概率论，统计学本身就是在数据中找规律，统计学的一直受限于计算能力，所以一直使用采样的方式进行统计，采样的方式的结果需要做假设检验，现在计算能力强了不需要做抽样计算了。\n如何找规律，1. 使用数据可视化方式 2. 用模型刻画（拟合）规律，用函数曲线拟合发展趋势，\n\n用数据代替专家，由专家制定逻辑，规则，机器学习让数据告诉我们规律\n机器学习有几十年的历史，统计学有上百年的历史，机器学习火起来的原因是因为大数据，数据量变大了，处理数据的能力也变强了\n\n业务系统实现逻辑，一开始考专家经验，由程序员转化成代码逻辑。\n后面引入数据，基于统计来分析业务，数据仓库，建立数据集市，建立数据维度，OLAP，根据数据规定数据规则，局限性在于做数据分析的人经验到什么程度\n后面进入机器学习，离线机器学习，晚上跑批处理，跑出个模型，把模型放到线上，应用模型，每天利用历史数据和新增数据跑新的数据模型。离线机器学习的问题，比如电商，电商节用户集中下单，节日模式，在这一天中消费者的消费模式有非常大的不一样，比如说双十一 用户上来消费 可能在这一天的消费模式可能就和以前非节日的时候就完全不一样，如果使用的是离线模式，可能使用的模型是10月的 就很不适合当天的推荐，最好的方法就是用当天的消费者的行为 做实时的模型构建，实时推荐，由此就推动了在线学习，来一些增量数据就调整模型，实时给消费者做一些指导。在线机器学习，互联网行业用的比较多。\n在线和离线模式的机器学习算法都类似，在线需要考虑实时数据流。\n\n\n典型应用\n1. 购物篮分析算法，关联规则，捆绑销售，货架摆放位子，\n2. 用户细分精准营销， 比如说如何区分手机用户的群体，利用用户的消费数据，利用聚类算法，有机器计算用户分类，想分几类分几类，由业务人员看每一类用户有什么消费特征，告诉业务人员一类人有什么样的特征\n3. 垃圾邮箱识别，朴素贝叶斯算法，\n4. 信用卡欺诈，决策树，信贷风险识别（无能力还贷 或者是 骗贷行为）\n5. 互联网广告，ctr预估算法，用户点击率预估，评价用户点击的概率，\n6. 推荐系统，协同过滤，类似购物篮分析关联分析\n7. 自然语言处理，情感分析，实体识别\n8. 图像识别，深度学习\n\n机器学习和数据分析的区别\n处理的数据不一样\n1. 数据分析处理的是交易数据，机器学习是行为数据。交易数据，银行账单，电商订单，运营商话单，和钱有关的数据。行为数据，点击历史，浏览历史，搜索历史，评论，\n2. 数据量，交易数据是少量数据，行为数据是海量数据。每天用户都会产生很多行为，但下单的数据和这些行为数据对比屈指可数。\n3. 分析方法，交易数据可以采样数据分析方法，行为数据需要使用全量数据分析，\n4. 交易数据对数据一致性要求非常严格，用户行为数据对数据的一致性不用很高。交易数据，转账，A账户划走x金额，B账户转入x金额，由一个事务保证一致性，要么同时成功要么同时失败。Nosql只能处理行为数据，提供分布式，扩大数据存储量和处理能力的同时对数据一致性打一个折扣。交易数据使用关系型数据库，\n\n解决的问题不一样\n1. 数据分析是去报告历史发生了什么事情，描述业务，机器学习是预测未来会发生什么事，\n2. 技术手段不同，数据分析是用户驱动的 是数据分析师驱动的 交互式分析 OLAP，能处理的数据维度，数据属性有限，顶多十几二十个用户属性，几十维度最多了，多维、钻取、多层次、透视表，落伍 成熟\n3. 机器学习，数据驱动，自己进行知识发现，大量维度，很多属性，维度非常多，人无法处理，准备数据引入算法 机器处理数据分析。发展阶段，部分已经成熟，相对流行\n4. 参与者不同，数据分析由数据分析师操作，由数据分析师能力决定结果。机器学习 数据驱动，数据质量决定结果，算法之间的差异不是很悬殊，主要看数据质量\n5. 服务对象不一样，数据分析主要是给公司高层人员看的，机器学习主要针对个体，针对用户，针对每个用户推荐相关产品。\n\n机器学习算法分类（不同分类方法从不同维度看算法分类）\n1. 有监督学习，明确给出Y是什么值，先给一堆邮件 这堆邮件已经打上标签了，已知Y，训练模型参数，典型的有监督学习有 分类算法、回归算法。无监督学习，数据中并没有Y，Y提前是不知道的，典型的算法就是聚类，电信数据本身也不知道要把用户分成几类，丢给算法，再看Y的聚类什么样，算法自己推测Y。半监督学习，强化学习，可能有些Y值，样本越多，模型越完善。\n2. 利用算法来分类，根据具体要解决的问题来分类算法。分类与回归。聚类。标注，给一句话里的每个词打一个标签，比如哪些是形容词 名词 介词 主语 宾语。\n3. 生成模型。判别模型。直指算法的本质，比如说逻辑回归 朴素贝叶斯有什么本质的区别，其实就是生成模型和判别模型的区别。判别模型就类似于给你一个函数，分类问题里，你把数据给函数 会返回一个结果 就会告诉你是哪一类。生成模型类似陪审团，不是直接告诉你属于哪一类，而是告诉你属于个各类的概率。这两个模型本质的区别在于数据训练模型生成的思想上是不一样的。\n\n常见算法\n分类算法 C4.5 CART（属于决策树算法）可以解决分类问题 也可以解决回归问题 属于有监督学习算法 现在不太用了\n聚类算法 K-Means 属于无监督学习算法\n分类算法 支持向量机 SVM 基于统计学习 解决分类问题 回归问题 效果好 而且有理论解释为什么好 面试必考问题\n关联分析 频繁项集问题 Apriori 已经淘汰的算法，得多次访问数据库记录 FP-Growth 解决性能问题，对数据库做两次扫描就可以完成频繁项集的挖掘。现在有更多的推荐算法，关联分析\n统计学习 EM 算法框架\nPageRank算法\nAdaBoost 人脸识别 决策树改进版 本质上解决分类问题 有监督学习\nkNN 分类问题 有监督学习\n朴素贝叶斯 垃圾邮件识别\n\n\nFP Growth 算法 华人发明\n逻辑回归 搜索结果排序\nRF GBDT 决策树算法的改进\n推荐算法\n\nLDA 文本分析 自然语言处理\nWord2Vector 文本挖掘\nHMM CRF 条件随机场 自然语言处理\n\n深度学习，图像识别\n\n解决的问题\n预测问题，预测所属的分类，预测数值，区别是在于预测的Y是离散型的数据变量还是连续性的数据变量。\n聚类问题\n\n## 解决问题的框架\n\n![框架流程](https://s3.ap-northeast-2.amazonaws.com/natt7-blog/Pasted+Graphic.png \"框架流程\")\n\n1. 确定业务需求 要目标明确\n2. 历史数据，多收集数据\n3. 特征工程，数据清洗 数据整合 提取特征，需要结构化！项目时间 特征功能占比70% 数据整理好了把数据喂给算法，算法提升空间小，特征工程做的好对模型的影响是巨大的。模型质量由数据质量决定。枯燥 繁琐。\n4. 训练模型。\n    1. 定义模型，根据问题决定X的系数，解决分类问题就是类似公式\n    2. 定义损失函数，预测的结果和真实结果有偏差，损失函数就是定义这个偏差的大小，比如说做一个线性回归模型，是没有精确解的 没有解析解，所以只能寻找一个近似解，损失函数局势用来评价模型的好坏，找偏差最小的模型，主要关心损失函数的绝对值，关心平方 有多种形式。回归问题，用预测结果减去真实结果，分类问题，两个分类没有什么关联 就需要通过数学的方式去定义损失函数。主要就是怎么去评价预测结果和真实结果的相似程度，评价模型是否优秀。\n    3.  优化算法，当损失函数取最小值的时候模型的参数是什么，这是优化算法的出发点，就是求损失函数的极小值，所以优化算法往往就归结于求函数极小值的问题上。有各种损失函数，导致在求损失函数极小值的优化算法也不一样，由此不同的优化算法就形成了不同的机器学习的算法。优化算法就是纯数学问题，梯度下降 随机梯度下降 坐标法 等等。\n5. 模型评估，评估指标：准确率、召回率、平均方差、ROC曲线 AUC\n    1. 交叉验证\n    2. 效果评估\n\ndemo\n分类图片\n将图片的RGB模式转换成HSL模式，形成12个数字的特征，工具是image2vector\n利用K-Means对图片进行分类\n利用python进行此次处理\n\n\n","tags":["ml"]}]